base_install ()
{
    add_dir "/proc"
    add_dir "/sys"
    add_dir "/dev"
    add_dir "/bin"
    add_dir "/sbin"
    add_dir "/lib"
    add_dir "/usr"
    add_dir "/usr/bin"
    add_dir "/usr/lib"
    add_dir "/usr/sbin"

    add_device "/dev/null"    c 1 3
    #add_device "/dev/zero"    c 1 5
    add_device "/dev/console" c 5 1
    #add_device "/dev/mem"     c 1 1

    #add_file "${BASEDIR}/lib/initcpio/busybox" "/bin/busybox"
    add_file "$CWD/initcpio/sbin/busybox-$ARCH" "/bin/busybox"

    for file in $(ls -1 ${BASEDIR}/lib/libc.so* 2>/dev/null); do
	[ -f $file ] && add_file "${file}" "${file##$BASEDIR}"
    done

    for file in $(ls -1 ${BASEDIR}/lib/ld-linux* 2>/dev/null); do
	[ -f $file ] && add_file "${file}" "${file##$BASEDIR}"
    done

    add_file ${BASEDIR}/sbin/modprobe /sbin/modprobe
    add_file ${BASEDIR}/sbin/blkid /sbin/blkid
    SO="libblkid.so libuuid.so"
    for so in $SO; do
		for file in $(ls -1 ${BASEDIR}/lib/$so* 2>/dev/null); do
			add_file "${file}" "${file##$BASEDIR}"
		done
    done

    #add_file "${BASEDIR}/lib/initcpio/init_functions" "/init_functions"
    #add_file "${BASEDIR}/lib/initcpio/init" "/init"
    #add_file "$CWD/initcpio/init_functions" "/init_functions" #合并到liblinuxlive
    add_file "$CWD/initcpio/init" "/init"

    add_file "${CONFIG}" "/config"

    if [ -n "${MESSAGE}" ]; then
        echo -e "${MESSAGE}" > ${MESSAGEFILE}
        add_file "${MESSAGEFILE}" "/message"
    fi
    add_file "${BASEDIR}/etc/modprobe.d/usb-load-ehci-first.conf" "/etc/modprobe.d/usb-load-ehci-first.conf"
}

udev_install ()
{
    FILES=" /etc/udev/udev.conf"
    #SCRIPT="udev" # 合并到 init
    add_file "${BASEDIR}/sbin/udevd" "/sbin/udevd"
    add_file "${BASEDIR}/sbin/udevadm" "/sbin/udevadm"
    for rules in 50-firmware.rules 50-udev-default.rules 60-persistent-storage.rules 80-drivers.rules; do
        add_file "${BASEDIR}/lib/udev/rules.d/${rules}" "/lib/udev/rules.d/${rules}"
    done
    for tool in firmware ata_id path_id scsi_id usb_id; do
        add_file "${BASEDIR}/lib/udev/${tool}" "/lib/udev/${tool}"
    done
    add_file "${BASEDIR}/lib/initcpio/udev/load-modules.sh" "/lib/udev/load-modules.sh"
}

pata_install ()
{
    MODULES="${MODULES} $(checked_modules "ata/pata_*") $(checked_modules "ata/ata_generic") 
              $(checked_modules "ata/ata_piix")"

    MODULES=$(echo ${MODULES}) #trim whitespace
    if [ -n "${MODULES}" ]; then
        MODULES="${MODULES} sd_mod"
    fi
}

scsi_install ()
{
    MODULES="${MODULES} $(checked_modules "/scsi/" | grep -ve "imm" -e "pdc_adma" -e "ahci" -e "ata" -e "pcmcia" -e "ide") 
              $(checked_modules "/block/" | grep -v "sx8")
              $(checked_modules "/fusion/")"

    MODULES=$(echo ${MODULES}) #trim whitespace
    if [ -n "${MODULES}" ]; then
        MODULES="${MODULES} sd_mod"
    fi
}

sata_install ()
{
    MODULES="${MODULES} $(checked_modules "scsi/.*ata") $(checked_modules "block/sx8") 
              $(checked_modules "scsi/ahci") $(checked_modules "scsi/pdc_adma") 
              $(checked_modules "ata/sata_*") $(checked_modules "ata/ahci") 
              $(checked_modules "ata/pdc_adma") $(checked_modules "ata/ata_piix")"

    MODULES=$(echo ${MODULES}) #trim whitespace
    if [ -n "${MODULES}" ]; then
        MODULES="${MODULES} sd_mod"
    fi
}

usb_install ()
{
    MODULES="${MODULES} $(checked_modules "/usb/host" | grep -ve "_cs" -e "sl1811-hcd" -e "isp116x-hcd")"

    MODULES=$(echo ${MODULES}) #trim whitespace
    if [ -n "${MODULES}" ]; then
        MODULES="${MODULES} usb_storage sd_mod sr_mod"
        MODULES="${MODULES} $(checked_modules "drivers/usb/storage/ums-*")"
    fi
}

filesystems_install ()
{
    MODULES="${MODULES} $(checked_modules '/kernel/fs' | grep -v "nls") $(checked_modules '/kernel/fs/nls/nls_cp936')"
}

btrfs_install()
{
    MODULES="${MODULES} $(all_modules btrfs)"
    #BINARIES="/sbin/btrfs"
    add_file "${BASEDIR}/sbin/btrfs" "/sbin/btrfs"
    #SCRIPT="btrfs"
}

net_install ()
{
    MODULES="${MODULES} nfs $(checked_modules "/drivers/net/") "
    SCRIPT="net"
    add_file "${BASEDIR}/lib/initcpio/ipconfig" "/bin/ipconfig"
    add_file "${BASEDIR}/lib/initcpio/nfsmount" "/bin/nfsmount"
}

kms_install ()
{
    MODULES="${MODULES} intel_agp i915 nouveau radeon mga i810 i830 sisfb sis savage via"
}
fw_install ()
{
    MODULES="${MODULES} $(checked_modules "/firewire/") "

    MODULES=$(echo ${MODULES}) #trim whitespace
    if [ -n "${MODULES}" ]; then
        MODULES="${MODULES} firewire-sbp2 sd_mod sr_mod"
    fi
}

archlive_install ()
{

    add_dir /tmp

    MODULES="${MODULES} cdrom ide-cd_mod ide-core ide-generic loop nls_cp936 nls_utf8"
    MODULES="${MODULES} aufs squashfs isofs udf fat vfat ntfs fuse ext2 ext3 ext4 btrfs reiserfs xfs cifs"
    # usb, mmc, memstick support
    MODULES="${MODULES} $(checked_modules "/usb/host" | grep -ve "_cs" -e "sl1811-hcd" -e "isp116x-hcd") usb_storage"
    MODULES="${MODULES} $(all_modules '/mmc/host') mmc_block sdhci-pci sd_mod sr_mod"
    MODULES="${MODULES} $(all_modules '/memstick/host')"
    #pcmcia support
    MODULES="${MODULES} pcmcia yenta_socket"

     # 部分网卡驱动
    MODULES="${MODULES} r8169 ath5k iwl3945"
    MODULES="${MODULES} pppoe"

    #trim whitespace
    MODULES=$(echo ${MODULES}) 

    add_file "${BASEDIR}/lib/initcpio/ipconfig" "/bin/ipconfig"
    add_file "${BASEDIR}/lib/initcpio/nfsmount" "/bin/nfsmount"
    add_file "$CWD/initcpio/sbin/mount.cifs-$ARCH" "/bin/mount.cifs"
    add_file "$CWD/initcpio/sbin/umount.cifs-$ARCH" "/bin/umount.cifs"
    add_file "${BASEDIR}/sbin/mount.aufs" "/bin/mount.aufs"
    add_file "${BASEDIR}/sbin/umount.aufs" "/bin/umount.aufs"

    add_file "${BASEDIR}/usr/sbin/iwconfig" "/bin/iwconfig"
    add_file "${BASEDIR}/usr/sbin/iwlist" "/bin/iwlist"
    for file in $(ls -1 ${BASEDIR}/lib/libiw.so*  2>/dev/null); do
	add_file "${file}" "${file##$BASEDIR}"
    done

    add_file "${BASEDIR}/sbin/dhcpcd" "/bin/dhcpcd"
    SO="librt.so libpthread.so"
    for so in $SO; do
		for file in $(ls -1 ${BASEDIR}/lib/$so* 2>/dev/null); do
			add_file "${file}" "${file##$BASEDIR}"
		done
    done

    add_file "${BASEDIR}/bin/tput" "/bin/tput"
    for file in $(ls -1 ${BASEDIR}/lib/libncursesw.so*  2>/dev/null); do
	add_file "${file}" "${file##$BASEDIR}"
    done

    add_file "$CWD/initcpio/liblinuxlive" "/usr/lib/liblinuxlive"
    add_file "$CWD/initcpio/cleanup" "/cleanup"

    #SCRIPT="archlive" #已经合并到init
}

install ()
{
    base_install
    udev_install
    pata_install
    scsi_install
    sata_install
    [ "${ALL_FS_BOOT}" = "y" ] && filesystems_install
    [ "${NET_BOOT_ARCHLIVE}" = "y" ] && net_install
    [ "${KMS_BOOT}" = "y" ] && kms_install
    btrfs_install
    archlive_install
}
